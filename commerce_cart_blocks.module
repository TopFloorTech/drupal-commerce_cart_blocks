<?php

use Drupal\Core\Ajax\HtmlCommand;
use Drupal\Core\Ajax\OpenModalDialogCommand;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element\StatusMessages;

/**
 * Implements hook_theme().
 */
function commerce_cart_blocks_theme($existing, $type, $theme, $path) {
  return [
    'commerce_cart_blocks_cart' => [
      'variables' => [
        'count' => NULL,
        'heading' => NULL,
        'content' => NULL,
        'in_cart' => NULL,
        'links' => [],
      ],
    ],
    'commerce_cart_blocks_cart_button' => [
      'variables' => [
        'count' => NULL,
        'icon' => NULL,
        'count_text' => '',
        'in_cart' => NULL,
        'url' => NULL,
        'content' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function commerce_cart_blocks_form_commerce_order_type_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /** @var \Drupal\commerce_order\Entity\OrderTypeInterface $order_type */
  $order_type = $form_state->getFormObject()->getEntity();

  $form['commerce_cart_blocks'] = [
    '#type' => 'details',
    '#title' => t('Commerce Cart Blocks'),
    '#description' => t('Additional options when using Commerce Cart Blocks.'),
    '#weight' => 5,
    '#open' => TRUE,
    '#collapsible' => TRUE,
  ];

  $form['commerce_cart_blocks']['commerce_cart_blocks_ajax'] = [
    '#type' => 'checkbox',
    '#title' => t('Enable AJAX for Commerce Cart Blocks'),
    '#default_value' => $order_type->getThirdPartySetting('commerce_cart_blocks', 'commerce_cart_blocks_ajax', FALSE),
  ];

  $form['commerce_cart_blocks']['commerce_cart_blocks_ajax_modal'] = [
    '#type' => 'checkbox',
    '#title' => t('Show a modal window after adding an item to the cart with AJAX'),
    '#default_value' => $order_type->getThirdPartySetting('commerce_cart_blocks', 'commerce_cart_blocks_ajax_modal', TRUE),
    '#states' => [
      'visible' => [':input[name="commerce_cart_blocks[commerce_cart_blocks_ajax]"]' => ['checked' => TRUE]]
    ],
  ];

  $form['commerce_cart_blocks']['commerce_cart_blocks_ajax_modal_title'] = [
    '#type' => 'textfield',
    '#title' => 'Title of the cart modal',
    '#default_value' => $order_type->getThirdPartySetting('commerce_cart_blocks', 'commerce_cart_blocks_ajax_modal_title', 'Cart'),
    '#states' => [
      'visible' => [':input[name="commerce_cart_blocks[commerce_cart_blocks_ajax]"]' => ['checked' => TRUE]]
    ],
  ];

  $form['actions']['submit']['#submit'][] = 'commerce_cart_blocks_order_type_form_submit';
}

/**
 * Form submission handler for 'commerce_order_type_form'.
 *
 * @param $form
 *   The form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state object.
 */
function commerce_cart_blocks_order_type_form_submit($form, FormStateInterface $form_state) {
  /** @var \Drupal\commerce_order\Entity\OrderTypeInterface $order_type */
  $order_type = $form_state->getFormObject()->getEntity();
  $settings = $form_state->getValue(['commerce_cart_blocks']);
  $order_type
    ->setThirdPartySetting('commerce_cart_blocks', 'commerce_cart_blocks_ajax', $settings['commerce_cart_blocks_ajax'])
    ->setThirdPartySetting('commerce_cart_blocks', 'commerce_cart_blocks_ajax_modal', $settings['commerce_cart_blocks_ajax_modal'])
    ->setThirdPartySetting('commerce_cart_blocks', 'commerce_cart_blocks_ajax_modal_title', $settings['commerce_cart_blocks_ajax_modal_title'])
    ->save();
}

/**
 * Get AJAX settings.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The entity.
 *
 * @return array
 *   An array of commerce_cart_blocks_ajax settings
 */
function commerce_cart_blocks_ajax_settings(\Drupal\Core\Entity\EntityInterface $entity) {
  /** @var \Drupal\commerce_order\Entity\OrderItemTypeInterface $item_type */
  $item_type = \Drupal::entityTypeManager()
    ->getStorage('commerce_order_item_type')
    ->load($entity->bundle());

  /** @var \Drupal\commerce_order\Entity\OrderTypeInterface $order_type */
  $order_type = \Drupal::entityTypeManager()
    ->getStorage('commerce_order_type')
    ->load($item_type->getOrderTypeId());

  return [
    'enabled' => $order_type->getThirdPartySetting('commerce_cart_blocks', 'commerce_cart_blocks_ajax', FALSE),
    'modal_enabled' => $order_type->getThirdPartySetting('commerce_cart_blocks', 'commerce_cart_blocks_ajax_modal', TRUE),
    'modal_title' => $order_type->getThirdPartySetting('commerce_cart_blocks', 'commerce_cart_blocks_ajax_modal_title', 'Cart'),
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function commerce_cart_blocks_form_commerce_order_item_add_to_cart_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $object = $form_state->getFormObject();

  if ($object && method_exists($object, 'getEntity')) {
    /** @var \Drupal\Core\Entity\EntityInterface $entity */
    $entity = $object->getEntity();
    $settings = commerce_cart_blocks_ajax_settings($entity);

    if ($entity && $settings['enabled']) {
      $form['commerce_cart_blocks_ajax'] = [
        '#type' => 'value',
        '#value' => $settings
      ];

      // Add use ajax to button
      $form['actions']['submit']['#ajax'] = [
        'callback' => 'commerce_cart_blocks_ajax_callback',
        'wrapper' => 'all_form',
        'effect' => 'fade',
        'progress' => [
          'type' => 'throbber',
          'message' => t('Adding to Cart'),
        ],
      ];
      $form['#attached']['library'][] = 'core/drupal.dialog.ajax';
    }
  }
}

/**
 * Ajax callback for variation product form.
 * @param array $form
 *   The form array.
 *
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state.
 *
 * @return \Drupal\Core\Ajax\AjaxResponse
 *   The AJAX response.
 */
function commerce_cart_blocks_ajax_callback(array $form, FormStateInterface &$form_state) {
  $response = new \Drupal\Core\Ajax\AjaxResponse();

  $ajax_settings = $form_state->getValue('commerce_cart_blocks_ajax', [
    'modal_enabled' => TRUE,
    'modal_title' => 'Cart'
  ]);

  // Update cart blocks after adding an item to cart
  if (!$form_state->getErrors()) {

    $types = [
      'commerce_cart_blocks_cart',
      'commerce_cart_blocks_button',
    ];

    foreach ($types as $block_type) {
      $query = \Drupal::entityQuery('block')
        ->condition('plugin', $block_type);

      foreach ($query->execute() as $block_id) {
        $response->addCommand(commerce_cart_blocks_render_cart_block_command($block_id));
      }
    }
  }

  $messages = StatusMessages::renderMessages(NULL);
  if ($ajax_settings['modal_enabled']) {
    $response->addCommand(new OpenModalDialogCommand(t($ajax_settings['modal_title']), $messages));
  }

  return $response;
}

/**
 * Render HTML of cart block
 *
 * @return HtmlCommand
 *   An AJAX command to replace the provided cart block.
 */
function commerce_cart_blocks_render_cart_block_command($block_id) {
  $block = \Drupal::entityTypeManager()->getStorage('block')->load($block_id);

  $build = \Drupal::entityTypeManager()
    ->getViewBuilder('block')
    ->view($block);

  $render = \Drupal::service('renderer')->render($build);
  $block_id = str_replace('_', '-', $block_id);

  return new HtmlCommand('#block-' . $block_id, $render);
}
